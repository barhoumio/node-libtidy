name: barhoumio/node-libtidy
on:
  push:
    branches:
    - "**/*"
  pull_request:
jobs:
  test:
    runs-on: ${{ matrix.os }}
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        cache: npm
        node-version: ${{ matrix.node_js }}
    - run: |
        if [[  ${{ runner.os }} == Linux ]]; then
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test && \
          sudo apt-get update -y && \
          sudo apt-get install -y gcc-4.8 g++-4.8 && \
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 60 \
                         --slave   /usr/bin/g++ g++ /usr/bin/g++-4.8 && \
          sudo apt-get upgrade -y libstdc++6 && \
          gcc --version && \
          g++ --version
        elif [[ ${{ runner.os }} == Windows ]]; then
          choco install gcc-4.8 g++-4.8 && \
          gcc --version && \
          g++ --version
        elif [[ ${{ runner.os }} == macOS ]]; then
         export CXX=clang && \
         export CC=clang && \
         CC --version && \
         CXX --version
        fi
    - run: env
    - run: node --version
    - run: npm --version
    - run: git submodule update --init --recursive
    - run: npm install --build-from-source
    - run: npm test
    - run: node_modules/.bin/node-pre-gyp package
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: build/stage/barhoumio/node-libtidy/releases/download/**/*.tar.gz
        draft: true
        tag_name: "${{ github.ref }}"
      if: "${{github.event_name == 'push' && github.ref == 'refs/tags/v*([0-9]).*([0-9]).*([0-9])' && matrix.node == '[0-9]*'}}"
    strategy:
      fail-fast: false
      matrix:
        node_js:
        - '18'
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        include:
        - CC: gcc-4.8
        - CXX: g++-4.8
        - experimental: true
    env:
      CC: "${{ matrix.CC }}"
      CXX: "${{ matrix.CXX }}"
